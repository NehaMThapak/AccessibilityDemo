@import "bower_components/bootstrap/less/mixins.less";

//
// Mixins
// --------------------------------------------------

.align-self(@align: auto) {
	align-self: @align;
	-webkit-align-self: @align;
}

// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
// 3. Fix of strange space above clearfixed elements
.clearfix() {
  &:before,
  &:after {
    content: " "; // 1
    display: table; // 2
    height: 0; overflow: hidden; // 3
  }
  &:after {
    clear: both;
  }
}

.custom-font() {
	// Better Font Rendering ===========
	font-smooth: always;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;

	// Hack to fix Android clipping issue
	&:before {
		position: relative;
	}
}

.flex(@args: 0 1 auto) {
	// grow shrink basis
	-webkit-flex-wrap: @args;
	-moz-box-flex:  @args;
	-webkit-flex:  @args;
	-ms-flex:  @args;
	flex: @args;
	// align-self: auto;
}

.flex-display() {
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: -o-flex;
	display: flex;
}

.flex-align-items(@align: flex-start) {
	align-items: @align;
	-webkit-align-items: @align;
}

.flex-flow(@flow: row wrap, @justifyContent: flex-start, @alignContent: space-around, @alignItems: stretch) {
	.flex-display();

	// direction wrap
	flex-flow: @flow;
	-webkit-flex-flow: @flow;

	justify-content: @justifyContent;
	-webkit-justify-content: @justifyContent;

	align-content: @alignContent;
	-webkit-align-content: @alignContent;

	.flex-align-items(@alignItems);
}

.flex-wrap(@wrap: nowrap) {
	.flex-display();

	-webkit-flex-wrap: @wrap;
	-moz-flex-wrap:  @wrap;
	-ms-flex-wrap:  @wrap;
	flex-wrap: @wrap;
}

.column-count(@num: 2) {
	-webkit-column-count: @num;
	-moz-column-count: @num;
	column-count: @num;
}
// Animation Duration
.animation-duration(@duration) {
	-webkit-animation-duration: @duration;
	// -moz-animation-duration: @duration;
	// -o-animation-duration: @duration;
	animation-duration: @duration;
}

.ellipsis(@max-content-width) {
	display: inline-block;
	max-width: @max-content-width;
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

.image-rendering(@mode: auto) {
	image-rendering: @mode;
	-ms-interpolation-mode: bicubic; //nearest-neighbor;
}

.appearance(@appearance:textfield) {
	 -webkit-appearance:@appearance;
	 -moz-appearance:@appearance;
	 appearance:@appearance;
}

.background-clip(@argument:padding-box) {
	-moz-background-clip:@argument;
	-webkit-background-clip:@argument;
	background-clip:@argument;
}

.border-radius(@radius) {
	-webkit-border-radius:@radius;
	-moz-border-radius:@radius;
	border-radius:@radius;
	.background-clip(padding-box);
}

.border-radius(@topright, @bottomright, @bottomleft, @topleft) when (isnumber(@topright)), (isnumber(@bottomright)), (isnumber(@bottomleft)), (isnumber(@topleft)) {
	-webkit-border-top-right-radius:@topright;
	-webkit-border-bottom-right-radius:@bottomright;
	-webkit-border-bottom-left-radius:@bottomleft;
	-webkit-border-top-left-radius:@topleft;
	-moz-border-radius-topright:@topright;
	-moz-border-radius-bottomright:@bottomright;
	-moz-border-radius-bottomleft:@bottomleft;
	-moz-border-radius-topleft:@topleft;
	border-top-right-radius:@topright;
	border-bottom-right-radius:@bottomright;
	border-bottom-left-radius:@bottomleft;
	border-top-left-radius:@topleft;
	.background-clip(padding-box);
}

.make-grid-columns() {
  // Common styles for all sizes of grid columns, widths 1-12
  .col(@index) { // initial
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}, .col-xl-@{index}";
    .col((@index + 1), @item);
  }
  .col(@index, @list) when (@index =< @grid-columns) { // general; "=<" isn't a typo
    @item: ~".col-xs-@{index}, .col-sm-@{index}, .col-md-@{index}, .col-lg-@{index}, .col-xl-@{index}";
    .col((@index + 1), ~"@{list}, @{item}");
  }
  .col(@index, @list) when (@index > @grid-columns) { // terminal
    @{list} {
      position: relative;
      // Prevent columns from collapsing when empty
      min-height: 1px;
      // Inner gutter via padding
      padding-left:  ceil((@grid-gutter-width / 2));
      padding-right: floor((@grid-gutter-width / 2));
    }
  }
  .col(1); // kickstart it
}

.placeholder(@color: @input-color-placeholder) {
	&::-webkit-input-placeholder { /* WebKit browsers */
		color:@color;
	}
	&:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
		opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
		color:@color;
	}
	&::-moz-placeholder { /* Mozilla Firefox 19+ */
		opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
		color:@color;
	}
	&:-ms-input-placeholder { /* Internet Explorer 10+ */
		color:@color;
	}
	&::-webkit-textarea-placeholder {
		color:@color;
	}
	&:-ms-textarea-placeholder {
		color:@color;
	}
	&.placeholder {
		color:@color;
		background-image:none !important; /* Fix for opera */
	}
}

// .perspective(@perspective) {
// 	-webkit-perspective:@perspective;
// 	-moz-perspective:@perspective;
// 	-ms-perspective:@perspective;
// 	-o-perspective:@perspective;
// 	perspective:@perspective;
// }

// Custom Selection Colors
.selection(@bgColor) {
	::selection {
		background-color:@bgColor;
	}
	::moz-selection {
		background-color:@bgColor;
	}
	::webkit-selection {
		background-color:@bgColor;
	}
}
.selection(@bgColor, @textColor) when (@textColor) {
	::selection {
		background-color:@bgColor;
		color:@textColor;
	}
	::moz-selection {
		background-color:@bgColor;
		color:@textColor;
	}
	::webkit-selection {
		background-color:@bgColor;
		color:@textColor;
	}
}

.square(@dimension) {
	height: @dimension;
	width: @dimension;
}

// Tab Focus
.tab-focus(@style: medium solid #f5833c, @offset: -2px) {
  outline: @style; outline-offset: @offset;
}


// Multiple Transforms
.transform(@transform) {
  -webkit-transform: @transform;
      -ms-transform: @transform;
          transform: @transform;
}

.transform-style(@style:preserve-3d) {
	-webkit-transform-style:preserve-3d;
	-moz-transform-style:preserve-3d;
	-ms-transform-style:preserve-3d;
	-o-transform-style:preserve-3d;
	transform-style:preserve-3d;
}

.grayscale() {
	-webkit-filter: grayscale(1); -webkit-filter: grayscale(100%);
	filter: gray; filter: grayscale(100%);
	filter: url("data:image/svg+xml;utf8,<svg version='1.1' xmlns='http://www.w3.org/2000/svg' height='0'><filter id='greyscale'><feColorMatrix type='matrix' values='0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0' /></filter></svg>#greyscale");
}
